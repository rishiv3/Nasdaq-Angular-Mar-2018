<!DOCTYPE html>
<!-- saved from url=(0032)http://localhost:8085/index.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>
	
	<title>Bug Tracker</title>
	<style>
		body{
			margin-left: 50px;
		}
		.stats, .bugname{
			font-size: 20pt;
		}
		section{
			margin-bottom: 10px;
		}
		.closed{
			color : red;
			text-decoration: line-through;
			font-style: italic;
			font-weight: bold;
		}
		.bugname{
			cursor: pointer;
		}
		ol{
			width: 450px;
			list-style: none;
			-webkit-padding-start : 0px;
		}
		li{
			margin-bottom: 10px;
			border: 1px solid gray;
			background-color: #e7e7e7;
			padding: 10px;
			border-radius: 5px;
		}
		.datetime{
			font-style: italic;
		}
	</style>
	<script type="text/usecases">
		(done) 1. Add new bugs
		(done) 2. List the bugs
		(done) 3. Toggle the 'closed' status of any bug
		(done) 4. Remove closed bugs
		(done) 5. Display stats
		6. Search for the bugs
		7. Sort the bugs
		8. Improvise the bug display
		9. Persist the bugs in the localStorage
		10. Display 'createdAt' for each bug
		11. Persist the bugs in the server
		12. Make the bugs accessible using unique urls
		13. Implement websockets (optional)
	</script>
	<script src="./Bug Tracker_files/angular.js"></script>
	<script>
		var bugTrackerApp = angular.module('bugTrackerApp', []);

		bugTrackerApp.value('defaultBugName', '[Default Bug Name]');

		bugTrackerApp.factory('bugOperations', function(defaultBugName){
			return {
				createNew : function(bugName){
					var newBug = {
						name : bugName || defaultBugName,
						isClosed : false
					};
					return newBug;
				},
				toggle : function(bug){
					bug.isClosed = !bug.isClosed;
				}
			};
		});

		bugTrackerApp.controller('bugsController', function($scope, bugOperations){

			$scope.bugs = [
				bugOperations.createNew('Server communications failure'),
				bugOperations.createNew('Data integrity checks failed'),
				bugOperations.createNew('Application not responding'),
				bugOperations.createNew('User actions not recognized')
			];

			$scope.onCreateNewClick = function(newBugName){
				var newBug = bugOperations.createNew(newBugName);
				$scope.bugs.push(newBug);
			};

			$scope.onBugClick = function(bug){
				bugOperations.toggle(bug);
			};

			$scope.onRemoveClosedClick = function(){
				for(var index = $scope.bugs.length-1; index >= 0; index--){
					if ($scope.bugs[index].isClosed)
						$scope.bugs.splice(index, 1);
				}
			};

			$scope.getClosedCount = function(){
				var closedCount = 0;
				for(var index = 0, count = $scope.bugs.length; index < count; index++){
					if ($scope.bugs[index].isClosed)
						++closedCount;
				}
				return closedCount;
			};
		});
	</script>
<script type="text/javascript" src="chrome-extension://aadgmnobpdmgmigaicncghmmoeflnamj/ng-inspector.js"></script></head>
<body ng-app="bugTrackerApp" class="ng-scope">
	<h1>Bug Tracker</h1>
	<hr>
	<div ng-controller="bugsController" class="ng-scope">
		<section class="stats">
			<span class="closed ng-binding">2</span>
			<span> / </span>
			<span class="ng-binding">4</span>
		</section>
		<section class="search">
			<label for="">Search :</label>
			<input type="text" ng-model="searchBug.name" class="ng-pristine ng-untouched ng-valid ng-empty">
			<label for="">Closed ? :</label>
			<input type="checkbox" ng-model="searchBug.isClosed" class="ng-valid ng-dirty ng-valid-parse ng-empty ng-touched">
			<input type="button" value="Show All" ng-click="searchBug.isClosed=undefined" ng-show="searchBug.isClosed !== undefined" class="ng-hide">
		</section>
		<section class="sort">
			<label for="">Order By:</label>
			<select>
				<option value=""></option>
				<option value=""></option>
			</select>
			<label for="">Descending ? :</label>
			<input type="checkbox">
		</section>
		<section class="edit">
			<label for="">Bug Name :</label>
			<input type="text" ng-model="newBugName" class="ng-pristine ng-untouched ng-valid ng-empty">
			<input type="button" value="Create New" ng-click="onCreateNewClick(newBugName)">
		</section>
		<section class="list">
			<ol>
				<!-- ngRepeat: bug in bugs | filter:searchBug --><li ng-repeat="bug in bugs | filter:searchBug" class="ng-scope">
					<span class="bugname ng-binding" ng-click="onBugClick(bug)" ng-class="{closed : bug.isClosed}">Server communications failure</span>
					<div class="datetime">[Created At]</div>
				</li><!-- end ngRepeat: bug in bugs | filter:searchBug --><li ng-repeat="bug in bugs | filter:searchBug" class="ng-scope">
					<span class="bugname ng-binding closed" ng-click="onBugClick(bug)" ng-class="{closed : bug.isClosed}">Data integrity checks failed</span>
					<div class="datetime">[Created At]</div>
				</li><!-- end ngRepeat: bug in bugs | filter:searchBug --><li ng-repeat="bug in bugs | filter:searchBug" class="ng-scope">
					<span class="bugname ng-binding closed" ng-click="onBugClick(bug)" ng-class="{closed : bug.isClosed}">Application not responding</span>
					<div class="datetime">[Created At]</div>
				</li><!-- end ngRepeat: bug in bugs | filter:searchBug --><li ng-repeat="bug in bugs | filter:searchBug" class="ng-scope">
					<span class="bugname ng-binding" ng-click="onBugClick(bug)" ng-class="{closed : bug.isClosed}">User actions not recognized</span>
					<div class="datetime">[Created At]</div>
				</li><!-- end ngRepeat: bug in bugs | filter:searchBug -->
			</ol>
			<input type="button" value="Remove Closed" ng-click="onRemoveClosedClick()">
		</section>
	</div>

</body></html>